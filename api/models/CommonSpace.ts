/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Aff } from './Aff';
import {
    AffFromJSON,
    AffFromJSONTyped,
    AffToJSON,
} from './Aff';
import type { Afm } from './Afm';
import {
    AfmFromJSON,
    AfmFromJSONTyped,
    AfmToJSON,
} from './Afm';
import type { CommonSpaceType } from './CommonSpaceType';
import {
    CommonSpaceTypeFromJSON,
    CommonSpaceTypeFromJSONTyped,
    CommonSpaceTypeToJSON,
} from './CommonSpaceType';

/**
 * 
 * @export
 * @interface CommonSpace
 */
export interface CommonSpace {
    /**
     * 
     * @type {number}
     * @memberof CommonSpace
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CommonSpace
     */
    ref: string;
    /**
     * 
     * @type {string}
     * @memberof CommonSpace
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommonSpace
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CommonSpace
     */
    commonSpaceTypeId?: number;
    /**
     * 
     * @type {CommonSpaceType}
     * @memberof CommonSpace
     */
    commonSpaceType?: CommonSpaceType;
    /**
     * 
     * @type {number}
     * @memberof CommonSpace
     */
    affId?: number | null;
    /**
     * 
     * @type {Aff}
     * @memberof CommonSpace
     */
    aff?: Aff;
    /**
     * 
     * @type {number}
     * @memberof CommonSpace
     */
    afmId?: number | null;
    /**
     * 
     * @type {Afm}
     * @memberof CommonSpace
     */
    afm?: Afm;
    /**
     * 
     * @type {Date}
     * @memberof CommonSpace
     */
    createdAt?: Date | null;
}

/**
 * Check if a given object implements the CommonSpace interface.
 */
export function instanceOfCommonSpace(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ref" in value;

    return isInstance;
}

export function CommonSpaceFromJSON(json: any): CommonSpace {
    return CommonSpaceFromJSONTyped(json, false);
}

export function CommonSpaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonSpace {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ref': json['ref'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'commonSpaceTypeId': !exists(json, 'commonSpaceTypeId') ? undefined : json['commonSpaceTypeId'],
        'commonSpaceType': !exists(json, 'commonSpaceType') ? undefined : CommonSpaceTypeFromJSON(json['commonSpaceType']),
        'affId': !exists(json, 'affId') ? undefined : json['affId'],
        'aff': !exists(json, 'aff') ? undefined : AffFromJSON(json['aff']),
        'afmId': !exists(json, 'afmId') ? undefined : json['afmId'],
        'afm': !exists(json, 'afm') ? undefined : AfmFromJSON(json['afm']),
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
    };
}

export function CommonSpaceToJSON(value?: CommonSpace | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ref': value.ref,
        'displayName': value.displayName,
        'description': value.description,
        'commonSpaceTypeId': value.commonSpaceTypeId,
        'commonSpaceType': CommonSpaceTypeToJSON(value.commonSpaceType),
        'affId': value.affId,
        'aff': AffToJSON(value.aff),
        'afmId': value.afmId,
        'afm': AfmToJSON(value.afm),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
    };
}

