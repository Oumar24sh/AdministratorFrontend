/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Aff } from './Aff';
import {
    AffFromJSON,
    AffFromJSONTyped,
    AffToJSON,
} from './Aff';
import type { Plot } from './Plot';
import {
    PlotFromJSON,
    PlotFromJSONTyped,
    PlotToJSON,
} from './Plot';
import type { PlotDestination } from './PlotDestination';
import {
    PlotDestinationFromJSON,
    PlotDestinationFromJSONTyped,
    PlotDestinationToJSON,
} from './PlotDestination';
import type { PlotStatus } from './PlotStatus';
import {
    PlotStatusFromJSON,
    PlotStatusFromJSONTyped,
    PlotStatusToJSON,
} from './PlotStatus';

/**
 * 
 * @export
 * @interface PlotHistory
 */
export interface PlotHistory {
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    plotId?: number;
    /**
     * 
     * @type {Plot}
     * @memberof PlotHistory
     */
    plot?: Plot;
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    gisArea?: number;
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    far?: number;
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    plotDestinationId?: number;
    /**
     * 
     * @type {PlotDestination}
     * @memberof PlotHistory
     */
    plotDestination?: PlotDestination;
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    plotStatusId?: number;
    /**
     * 
     * @type {PlotStatus}
     * @memberof PlotHistory
     */
    plotStatus?: PlotStatus;
    /**
     * 
     * @type {number}
     * @memberof PlotHistory
     */
    affId?: number;
    /**
     * 
     * @type {Aff}
     * @memberof PlotHistory
     */
    aff?: Aff;
    /**
     * 
     * @type {Date}
     * @memberof PlotHistory
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PlotHistory
     */
    validFrom?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlotHistory
     */
    validTo?: Date | null;
}

/**
 * Check if a given object implements the PlotHistory interface.
 */
export function instanceOfPlotHistory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PlotHistoryFromJSON(json: any): PlotHistory {
    return PlotHistoryFromJSONTyped(json, false);
}

export function PlotHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlotHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'plotId': !exists(json, 'plotId') ? undefined : json['plotId'],
        'plot': !exists(json, 'plot') ? undefined : PlotFromJSON(json['plot']),
        'gisArea': !exists(json, 'gisArea') ? undefined : json['gisArea'],
        'far': !exists(json, 'far') ? undefined : json['far'],
        'plotDestinationId': !exists(json, 'plotDestinationId') ? undefined : json['plotDestinationId'],
        'plotDestination': !exists(json, 'plotDestination') ? undefined : PlotDestinationFromJSON(json['plotDestination']),
        'plotStatusId': !exists(json, 'plotStatusId') ? undefined : json['plotStatusId'],
        'plotStatus': !exists(json, 'plotStatus') ? undefined : PlotStatusFromJSON(json['plotStatus']),
        'affId': !exists(json, 'affId') ? undefined : json['affId'],
        'aff': !exists(json, 'aff') ? undefined : AffFromJSON(json['aff']),
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
        'validFrom': !exists(json, 'validFrom') ? undefined : (new Date(json['validFrom'])),
        'validTo': !exists(json, 'validTo') ? undefined : (json['validTo'] === null ? null : new Date(json['validTo'])),
    };
}

export function PlotHistoryToJSON(value?: PlotHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'plotId': value.plotId,
        'plot': PlotToJSON(value.plot),
        'gisArea': value.gisArea,
        'far': value.far,
        'plotDestinationId': value.plotDestinationId,
        'plotDestination': PlotDestinationToJSON(value.plotDestination),
        'plotStatusId': value.plotStatusId,
        'plotStatus': PlotStatusToJSON(value.plotStatus),
        'affId': value.affId,
        'aff': AffToJSON(value.aff),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
        'validFrom': value.validFrom === undefined ? undefined : (value.validFrom.toISOString()),
        'validTo': value.validTo === undefined ? undefined : (value.validTo === null ? null : value.validTo.toISOString()),
    };
}

