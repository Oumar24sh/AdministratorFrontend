/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommonSpaceType
 */
export interface CommonSpaceType {
    /**
     * 
     * @type {number}
     * @memberof CommonSpaceType
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CommonSpaceType
     */
    ref: string;
    /**
     * 
     * @type {string}
     * @memberof CommonSpaceType
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommonSpaceType
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CommonSpaceType
     */
    createdAt?: Date | null;
}

/**
 * Check if a given object implements the CommonSpaceType interface.
 */
export function instanceOfCommonSpaceType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ref" in value;

    return isInstance;
}

export function CommonSpaceTypeFromJSON(json: any): CommonSpaceType {
    return CommonSpaceTypeFromJSONTyped(json, false);
}

export function CommonSpaceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonSpaceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ref': json['ref'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
    };
}

export function CommonSpaceTypeToJSON(value?: CommonSpaceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ref': value.ref,
        'displayName': value.displayName,
        'description': value.description,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
    };
}

