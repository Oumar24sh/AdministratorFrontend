/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AffCalculationVersion } from './AffCalculationVersion';
import {
    AffCalculationVersionFromJSON,
    AffCalculationVersionFromJSONTyped,
    AffCalculationVersionToJSON,
} from './AffCalculationVersion';
import type { AffExpenseItemsVersion } from './AffExpenseItemsVersion';
import {
    AffExpenseItemsVersionFromJSON,
    AffExpenseItemsVersionFromJSONTyped,
    AffExpenseItemsVersionToJSON,
} from './AffExpenseItemsVersion';
import type { AfmCalculationVersion } from './AfmCalculationVersion';
import {
    AfmCalculationVersionFromJSON,
    AfmCalculationVersionFromJSONTyped,
    AfmCalculationVersionToJSON,
} from './AfmCalculationVersion';
import type { AfmExpenseItemsVersion } from './AfmExpenseItemsVersion';
import {
    AfmExpenseItemsVersionFromJSON,
    AfmExpenseItemsVersionFromJSONTyped,
    AfmExpenseItemsVersionToJSON,
} from './AfmExpenseItemsVersion';
import type { CommonSpaceVersion } from './CommonSpaceVersion';
import {
    CommonSpaceVersionFromJSON,
    CommonSpaceVersionFromJSONTyped,
    CommonSpaceVersionToJSON,
} from './CommonSpaceVersion';
import type { ConfigurationStatus } from './ConfigurationStatus';
import {
    ConfigurationStatusFromJSON,
    ConfigurationStatusFromJSONTyped,
    ConfigurationStatusToJSON,
} from './ConfigurationStatus';
import type { CopropertyVersion } from './CopropertyVersion';
import {
    CopropertyVersionFromJSON,
    CopropertyVersionFromJSONTyped,
    CopropertyVersionToJSON,
} from './CopropertyVersion';
import type { PlotCalculationVersion } from './PlotCalculationVersion';
import {
    PlotCalculationVersionFromJSON,
    PlotCalculationVersionFromJSONTyped,
    PlotCalculationVersionToJSON,
} from './PlotCalculationVersion';
import type { PlotVersion } from './PlotVersion';
import {
    PlotVersionFromJSON,
    PlotVersionFromJSONTyped,
    PlotVersionToJSON,
} from './PlotVersion';

/**
 * 
 * @export
 * @interface ModelConfiguration
 */
export interface ModelConfiguration {
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelConfiguration
     */
    ref?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ModelConfiguration
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ModelConfiguration
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    plotVersionId?: number;
    /**
     * 
     * @type {PlotVersion}
     * @memberof ModelConfiguration
     */
    plotVersion?: PlotVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    copropertyVersionId?: number;
    /**
     * 
     * @type {CopropertyVersion}
     * @memberof ModelConfiguration
     */
    copropertyVersion?: CopropertyVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    commonSpaceVersionId?: number;
    /**
     * 
     * @type {CommonSpaceVersion}
     * @memberof ModelConfiguration
     */
    commonSpaceVersion?: CommonSpaceVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    affExpenseItemsVersionId?: number;
    /**
     * 
     * @type {AffExpenseItemsVersion}
     * @memberof ModelConfiguration
     */
    affExpenseItemsVersion?: AffExpenseItemsVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    affCalculationVersionId?: number;
    /**
     * 
     * @type {AffCalculationVersion}
     * @memberof ModelConfiguration
     */
    affCalculationVersion?: AffCalculationVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    afmCalculationVersionId?: number;
    /**
     * 
     * @type {AfmCalculationVersion}
     * @memberof ModelConfiguration
     */
    afmCalculationVersion?: AfmCalculationVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    afmExpenseItemsVersionId?: number;
    /**
     * 
     * @type {AfmExpenseItemsVersion}
     * @memberof ModelConfiguration
     */
    afmExpenseItemsVersion?: AfmExpenseItemsVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    plotCalculationVersionId?: number;
    /**
     * 
     * @type {PlotCalculationVersion}
     * @memberof ModelConfiguration
     */
    plotCalculationVersion?: PlotCalculationVersion;
    /**
     * 
     * @type {number}
     * @memberof ModelConfiguration
     */
    configurationStatusId?: number;
    /**
     * 
     * @type {ConfigurationStatus}
     * @memberof ModelConfiguration
     */
    configurationStatus?: ConfigurationStatus;
    /**
     * 
     * @type {Date}
     * @memberof ModelConfiguration
     */
    createdAt?: Date | null;
}

/**
 * Check if a given object implements the ModelConfiguration interface.
 */
export function instanceOfModelConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelConfigurationFromJSON(json: any): ModelConfiguration {
    return ModelConfigurationFromJSONTyped(json, false);
}

export function ModelConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ref': !exists(json, 'ref') ? undefined : json['ref'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'plotVersionId': !exists(json, 'plotVersionId') ? undefined : json['plotVersionId'],
        'plotVersion': !exists(json, 'plotVersion') ? undefined : PlotVersionFromJSON(json['plotVersion']),
        'copropertyVersionId': !exists(json, 'copropertyVersionId') ? undefined : json['copropertyVersionId'],
        'copropertyVersion': !exists(json, 'copropertyVersion') ? undefined : CopropertyVersionFromJSON(json['copropertyVersion']),
        'commonSpaceVersionId': !exists(json, 'commonSpaceVersionId') ? undefined : json['commonSpaceVersionId'],
        'commonSpaceVersion': !exists(json, 'commonSpaceVersion') ? undefined : CommonSpaceVersionFromJSON(json['commonSpaceVersion']),
        'affExpenseItemsVersionId': !exists(json, 'affExpenseItemsVersionId') ? undefined : json['affExpenseItemsVersionId'],
        'affExpenseItemsVersion': !exists(json, 'affExpenseItemsVersion') ? undefined : AffExpenseItemsVersionFromJSON(json['affExpenseItemsVersion']),
        'affCalculationVersionId': !exists(json, 'affCalculationVersionId') ? undefined : json['affCalculationVersionId'],
        'affCalculationVersion': !exists(json, 'affCalculationVersion') ? undefined : AffCalculationVersionFromJSON(json['affCalculationVersion']),
        'afmCalculationVersionId': !exists(json, 'afmCalculationVersionId') ? undefined : json['afmCalculationVersionId'],
        'afmCalculationVersion': !exists(json, 'afmCalculationVersion') ? undefined : AfmCalculationVersionFromJSON(json['afmCalculationVersion']),
        'afmExpenseItemsVersionId': !exists(json, 'afmExpenseItemsVersionId') ? undefined : json['afmExpenseItemsVersionId'],
        'afmExpenseItemsVersion': !exists(json, 'afmExpenseItemsVersion') ? undefined : AfmExpenseItemsVersionFromJSON(json['afmExpenseItemsVersion']),
        'plotCalculationVersionId': !exists(json, 'plotCalculationVersionId') ? undefined : json['plotCalculationVersionId'],
        'plotCalculationVersion': !exists(json, 'plotCalculationVersion') ? undefined : PlotCalculationVersionFromJSON(json['plotCalculationVersion']),
        'configurationStatusId': !exists(json, 'configurationStatusId') ? undefined : json['configurationStatusId'],
        'configurationStatus': !exists(json, 'configurationStatus') ? undefined : ConfigurationStatusFromJSON(json['configurationStatus']),
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
    };
}

export function ModelConfigurationToJSON(value?: ModelConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ref': value.ref,
        'displayName': value.displayName,
        'description': value.description,
        'plotVersionId': value.plotVersionId,
        'plotVersion': PlotVersionToJSON(value.plotVersion),
        'copropertyVersionId': value.copropertyVersionId,
        'copropertyVersion': CopropertyVersionToJSON(value.copropertyVersion),
        'commonSpaceVersionId': value.commonSpaceVersionId,
        'commonSpaceVersion': CommonSpaceVersionToJSON(value.commonSpaceVersion),
        'affExpenseItemsVersionId': value.affExpenseItemsVersionId,
        'affExpenseItemsVersion': AffExpenseItemsVersionToJSON(value.affExpenseItemsVersion),
        'affCalculationVersionId': value.affCalculationVersionId,
        'affCalculationVersion': AffCalculationVersionToJSON(value.affCalculationVersion),
        'afmCalculationVersionId': value.afmCalculationVersionId,
        'afmCalculationVersion': AfmCalculationVersionToJSON(value.afmCalculationVersion),
        'afmExpenseItemsVersionId': value.afmExpenseItemsVersionId,
        'afmExpenseItemsVersion': AfmExpenseItemsVersionToJSON(value.afmExpenseItemsVersion),
        'plotCalculationVersionId': value.plotCalculationVersionId,
        'plotCalculationVersion': PlotCalculationVersionToJSON(value.plotCalculationVersion),
        'configurationStatusId': value.configurationStatusId,
        'configurationStatus': ConfigurationStatusToJSON(value.configurationStatus),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
    };
}

