/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
} from './UserResponse';

/**
 * 
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
    /**
     * 
     * @type {number}
     * @memberof LoginResponse
     */
    statusCode?: number;
    /**
     * 
     * @type {UserResponse}
     * @memberof LoginResponse
     */
    user?: UserResponse;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    statusMessage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    accessToken?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    refreshToken?: string | null;
}

/**
 * Check if a given object implements the LoginResponse interface.
 */
export function instanceOfLoginResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LoginResponseFromJSON(json: any): LoginResponse {
    return LoginResponseFromJSONTyped(json, false);
}

export function LoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'statusCode': !exists(json, 'statusCode') ? undefined : json['statusCode'],
        'user': !exists(json, 'user') ? undefined : UserResponseFromJSON(json['user']),
        'statusMessage': !exists(json, 'statusMessage') ? undefined : json['statusMessage'],
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
    };
}

export function LoginResponseToJSON(value?: LoginResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'statusCode': value.statusCode,
        'user': UserResponseToJSON(value.user),
        'statusMessage': value.statusMessage,
        'accessToken': value.accessToken,
        'refreshToken': value.refreshToken,
    };
}

