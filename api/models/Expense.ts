/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExpenseCategory } from './ExpenseCategory';
import {
    ExpenseCategoryFromJSON,
    ExpenseCategoryFromJSONTyped,
    ExpenseCategoryToJSON,
} from './ExpenseCategory';
import type { ExpenseMultiplier } from './ExpenseMultiplier';
import {
    ExpenseMultiplierFromJSON,
    ExpenseMultiplierFromJSONTyped,
    ExpenseMultiplierToJSON,
} from './ExpenseMultiplier';
import type { ExpenseUnitType } from './ExpenseUnitType';
import {
    ExpenseUnitTypeFromJSON,
    ExpenseUnitTypeFromJSONTyped,
    ExpenseUnitTypeToJSON,
} from './ExpenseUnitType';

/**
 * 
 * @export
 * @interface Expense
 */
export interface Expense {
    /**
     * 
     * @type {number}
     * @memberof Expense
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Expense
     */
    ref: string;
    /**
     * 
     * @type {string}
     * @memberof Expense
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Expense
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Expense
     */
    expenseUnitTypeId?: number | null;
    /**
     * 
     * @type {ExpenseUnitType}
     * @memberof Expense
     */
    expenseUnitType?: ExpenseUnitType;
    /**
     * 
     * @type {number}
     * @memberof Expense
     */
    expenseCategoryId?: number;
    /**
     * 
     * @type {ExpenseCategory}
     * @memberof Expense
     */
    expenseCategory?: ExpenseCategory;
    /**
     * 
     * @type {number}
     * @memberof Expense
     */
    expenseMultiplierId?: number | null;
    /**
     * 
     * @type {ExpenseMultiplier}
     * @memberof Expense
     */
    expenseMultiplier?: ExpenseMultiplier;
    /**
     * 
     * @type {Date}
     * @memberof Expense
     */
    createdAt?: Date | null;
}

/**
 * Check if a given object implements the Expense interface.
 */
export function instanceOfExpense(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ref" in value;

    return isInstance;
}

export function ExpenseFromJSON(json: any): Expense {
    return ExpenseFromJSONTyped(json, false);
}

export function ExpenseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Expense {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ref': json['ref'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'expenseUnitTypeId': !exists(json, 'expenseUnitTypeId') ? undefined : json['expenseUnitTypeId'],
        'expenseUnitType': !exists(json, 'expenseUnitType') ? undefined : ExpenseUnitTypeFromJSON(json['expenseUnitType']),
        'expenseCategoryId': !exists(json, 'expenseCategoryId') ? undefined : json['expenseCategoryId'],
        'expenseCategory': !exists(json, 'expenseCategory') ? undefined : ExpenseCategoryFromJSON(json['expenseCategory']),
        'expenseMultiplierId': !exists(json, 'expenseMultiplierId') ? undefined : json['expenseMultiplierId'],
        'expenseMultiplier': !exists(json, 'expenseMultiplier') ? undefined : ExpenseMultiplierFromJSON(json['expenseMultiplier']),
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
    };
}

export function ExpenseToJSON(value?: Expense | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ref': value.ref,
        'displayName': value.displayName,
        'description': value.description,
        'expenseUnitTypeId': value.expenseUnitTypeId,
        'expenseUnitType': ExpenseUnitTypeToJSON(value.expenseUnitType),
        'expenseCategoryId': value.expenseCategoryId,
        'expenseCategory': ExpenseCategoryToJSON(value.expenseCategory),
        'expenseMultiplierId': value.expenseMultiplierId,
        'expenseMultiplier': ExpenseMultiplierToJSON(value.expenseMultiplier),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
    };
}

