/* tslint:disable */
/* eslint-disable */
/**
 * Beau Plan Administrator\'s API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExpenseItemResponse } from './ExpenseItemResponse';
import {
    ExpenseItemResponseFromJSON,
    ExpenseItemResponseFromJSONTyped,
    ExpenseItemResponseToJSON,
} from './ExpenseItemResponse';

/**
 * 
 * @export
 * @interface ExpenseResponse
 */
export interface ExpenseResponse {
    /**
     * 
     * @type {number}
     * @memberof ExpenseResponse
     */
    totalAmount?: number | null;
    /**
     * 
     * @type {Array<ExpenseItemResponse>}
     * @memberof ExpenseResponse
     */
    data?: Array<ExpenseItemResponse> | null;
}

/**
 * Check if a given object implements the ExpenseResponse interface.
 */
export function instanceOfExpenseResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExpenseResponseFromJSON(json: any): ExpenseResponse {
    return ExpenseResponseFromJSONTyped(json, false);
}

export function ExpenseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpenseResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalAmount': !exists(json, 'totalAmount') ? undefined : json['totalAmount'],
        'data': !exists(json, 'data') ? undefined : (json['data'] === null ? null : (json['data'] as Array<any>).map(ExpenseItemResponseFromJSON)),
    };
}

export function ExpenseResponseToJSON(value?: ExpenseResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalAmount': value.totalAmount,
        'data': value.data === undefined ? undefined : (value.data === null ? null : (value.data as Array<any>).map(ExpenseItemResponseToJSON)),
    };
}

